{"version":3,"sources":["../src/create_block_plugin.js"],"names":["type","i18nNamespace","schema","schemaDef","Component","hasCustomHover","blockPluginProps","isEditing","blockComponent","data","container","dataMap","fromJS","component","showDialogInitially","Boolean","addPlugin","onChange","editorState","showDialog","clean","buttonComponent","e","preventDefault"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;;;kBAEe;AAAA,MACbA,IADa,QACbA,IADa;AAAA,gCAEbC,aAFa;AAAA,MAEbA,aAFa,8CAESD,IAFT;AAAA,yBAGbE,MAHa;AAAA,MAGLC,SAHK,+BAGO,IAHP;AAAA,MAIbC,SAJa,QAIbA,SAJa;AAAA,MAKbC,cALa,QAKbA,cALa;AAAA,SAMR,iBAAqC;AAAA,QAAlCC,gBAAkC,SAAlCA,gBAAkC;AAAA,QAAhBC,SAAgB,SAAhBA,SAAgB;;AACzC,QAAML,SAASC,aACb,oCAAmBA,SAAnB,CADF;;AAIA,QAAMK,iBAAiB,SAAjBA,cAAiB,QAAyB;AAAA,UAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,UAAhBC,SAAgB,SAAhBA,SAAgB;;AAC9C,UAAMC,UAAU,oBAAUC,MAAV,CAAiBH,IAAjB,CAAhB;AACA,UAAMI,YACJ,8BAAC,SAAD,6BACMP,gBADN,EAEMG,IAFN,IAEY,WAAWF;AAFvB,SADF;AAMA;AACA,UAAI,CAACA,SAAL,EAAgB;AACd,eAAOM,SAAP;AACD;AACD,aACE;AAAA;AAAA;AACE,kBAAQX,MADV;AAEE,yBAAeD,aAFjB;AAGE,mBAASU,OAHX;AAIE,qBAAWD,SAJb;AAKE,0BAAgBL;AALlB;AAOGQ;AAPH,OADF;AAWD,KAvBD;AAwBA,QAAMC,sBAAsBC,QAAQb,MAAR,CAA5B,CA7ByC,CA6BI;;AAE7C,QAAMc,YAAY,SAAZA,SAAY,QAA+B;AAAA,UAA5BC,QAA4B,SAA5BA,QAA4B;AAAA,UAAlBC,WAAkB,SAAlBA,WAAkB;;AAC/C,UAAMT;AACJT,kBADI;AAEJmB,oBAAYL;AAFR,SAGAZ,SAASA,OAAOkB,KAAP,CAAa,EAAb,CAAT,GAA4B,EAH5B,CAAN;AAKF;AACEH,eAAS,gCAAgBC,WAAhB,EAA6BT,IAA7B,CAAT;AACD,KARD;;AAWA,QAAMY,kBAAkB,SAAlBA,eAAkB;AAAA,UAAGJ,QAAH,SAAGA,QAAH;AAAA,UAAaC,WAAb,SAAaA,WAAb;AAAA,aACtB;AAAA;AAAA;AACE,mBAAS,iBAACI,CAAD,EAAO;AACdA,cAAEC,cAAF;AACAP,sBAAU,EAAEC,kBAAF,EAAYC,wBAAZ,EAAV;AACD;AAJH;AAME,sDAAG,KAAK,CAAIjB,aAAJ,WAA4BA,aAA5B,YAAR;AANF,OADsB;AAAA,KAAxB;;AAWA,WAAO;AACL;AACAD,gBAFK;AAGL;AACAqB,sCAJK;AAKL;AACAb;AANK,KAAP;AAQD,GAnEa;AAAA,C","file":"create_block_plugin.js","sourcesContent":["import { T } from '@panter/manul-i18n';\nimport { insertDataBlock } from 'megadraft';\nimport React from 'react';\n\nimport Immutable from 'immutable';\n\nimport ButtonAddPlugin from './components/button_add_plugin';\nimport PluginEditableComponent from './containers/plugin_editable_component';\nimport wrapInSimpleSchema from './utils/wrap_in_simpleschema';\n\nexport default ({\n  type,\n  i18nNamespace = `cm.${type}`,\n  schema: schemaDef = null,\n  Component,\n  hasCustomHover,\n }) => ({ blockPluginProps, isEditing }) => {\n   const schema = schemaDef && (\n     wrapInSimpleSchema(schemaDef)\n   );\n\n   const blockComponent = ({ data, container }) => {\n     const dataMap = Immutable.fromJS(data);\n     const component = (\n       <Component\n         {...blockPluginProps}\n         {...data} isEditing={isEditing}\n       />\n     );\n     // show the render-component when not in editmode or if the plugin has no schema\n     if (!isEditing) {\n       return component;\n     }\n     return (\n       <PluginEditableComponent\n         schema={schema}\n         i18nNamespace={i18nNamespace}\n         dataMap={dataMap}\n         container={container}\n         hasCustomHover={hasCustomHover}\n       >\n         {component}\n       </PluginEditableComponent>\n     );\n   };\n   const showDialogInitially = Boolean(schema); // if has schema\n\n   const addPlugin = ({ onChange, editorState }) => {\n     const data = {\n       type,\n       showDialog: showDialogInitially,\n       ...(schema ? schema.clean({}) : {}),\n     };\n   // Calls the onChange method with the new state.\n     onChange(insertDataBlock(editorState, data));\n   };\n\n\n   const buttonComponent = ({ onChange, editorState }) => (\n     <ButtonAddPlugin\n       onClick={(e) => {\n         e.preventDefault();\n         addPlugin({ onChange, editorState });\n       }}\n     >\n       <T _id={[`${i18nNamespace}.add`, `${i18nNamespace}.label`]} />\n     </ButtonAddPlugin>\n  );\n\n   return {\n     // A unique plugin name used to identify the plugin and its blocks\n     type,\n     // React component to be rendered in the block sidebar\n     buttonComponent,\n     // React component for rendering the content block\n     blockComponent,\n   };\n };\n"]}