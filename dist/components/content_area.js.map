{"version":3,"sources":["../../src/components/content_area.jsx"],"names":["MegadraftEditor","Styles","highlightEditable","isEditing","base","outline","padding","margin","cursor","position","ContentArea","className","style","canEdit","blockPluginDialogIsActive","startEditing","cancelEditing","entityInputs","locale","editorState","setEditorState","saveAndClose","saveAndEdit","megadraftActions","blockRenderMap","megadraftBlockPlugins","copyLocales","copyFromLocale","styles","state","clear","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA;IACMA,e;;;;;;;;;;;AACJ;kCACc;AACZ;AACD;;;;;AAGH,IAAMC,SAAS,SAATA,MAAS;AAAA,MAAGC,iBAAH,QAAGA,iBAAH;AAAA,MAAsBC,SAAtB,QAAsBA,SAAtB;AAAA,SACX;AACCC,qCACMF,oBAAoB;AACtBG,eAAS,kBADa;AAEtBC,eAAS,EAFa;AAGtBC,cAAQ,CAAC;AAHa,KAApB,GAIA,EALN,EAMMJ,YAAY;AACdE,eAAS,kBADK;AAEdC,eAAS,EAFK;AAGdC,cAAQ,CAAC;AAHK,KAAZ,GAIA,EAVN;AAWEC,cAAQN,oBAAoB,SAApB,GAAgC,IAX1C;AAYEO,gBAAU;AAZZ;AADD,GADW;AAAA,CAAf;;AAmBA,IAAMC,cAAc,SAAdA,WAAc,QAoBZ;AAAA,MAnBJC,SAmBI,SAnBJA,SAmBI;AAAA,MAlBJC,KAkBI,SAlBJA,KAkBI;AAAA,MAjBJC,OAiBI,SAjBJA,OAiBI;AAAA,MAhBJV,SAgBI,SAhBJA,SAgBI;AAAA,MAfJW,yBAeI,SAfJA,yBAeI;AAAA,MAdJZ,iBAcI,SAdJA,iBAcI;AAAA,MAbJa,YAaI,SAbJA,YAaI;AAAA,MAZJC,aAYI,SAZJA,aAYI;AAAA,MAXJC,YAWI,SAXJA,YAWI;AAAA,MAVJC,MAUI,SAVJA,MAUI;AAAA,MATJC,WASI,SATJA,WASI;AAAA,MARJC,cAQI,SARJA,cAQI;AAAA,MAPJC,YAOI,SAPJA,YAOI;AAAA,MANJC,WAMI,SANJA,WAMI;AAAA,MALJC,gBAKI,SALJA,gBAKI;AAAA,MAJJC,cAII,SAJJA,cAII;AAAA,oCAHJC,qBAGI;AAAA,MAHJA,qBAGI,yCAHoB,EAGpB;AAAA,gCAFJC,WAEI;AAAA,MAFJA,WAEI,qCAFU,EAEV;AAAA,MADJC,cACI,SADJA,cACI;;AACN,MAAMC,SAAS3B,OAAO,EAAEC,oCAAF,EAAqBC,oBAArB,EAAP,CAAf;;AAEA,SACE;AAAA;AAAA,MAAK,OAAOS,KAAZ,EAAmB,WAAWD,SAA9B;AACE;AAAA;AAAA;AACE,eAAOiB,OAAOxB,IADhB;AAEE,iBAAS;AAAA,iBAAMS,WAAWX,iBAAX,IAAgCa,cAAtC;AAAA;AAFX;AAIGZ,mBACD;AACE,sBAAckB,YADhB;AAEE,qBAAaC,WAFf;AAGE,uBAAeN,aAHjB;AAIE,gBAAQE,MAJV;AAKE,qBAAaQ,WALf;AAME,wBAAgBC;AANlB,QALF;AAcE,oCAAC,eAAD;AACE,4BAAiBxB,YAAY,UAAZ,GAAyB,EAA1C,CADF,CACkD;AADlD,UAEE,SAASoB,gBAFX;AAGE,iBAASE,qBAHX;AAIE,kBAAUX,6BAA6B,CAACD,OAA9B,IAAyC,CAACV,SAJtD;AAKE,qBAAagB,WALf;AAME,sBAAcF,YANhB;AAOE,wBAAgBO,cAPlB;AAQE,kBAAU,kBAACK,KAAD,EAAW;AACnBT,yBAAeS,KAAf;AACD;AAVH,QAdF;AA0BE,6CAAK,OAAO,EAAEC,OAAO,MAAT,EAAZ;AA1BF;AADF,GADF;AAgCD,CAvDD;;AA0DApB,YAAYqB,WAAZ,GAA0B,aAA1B;;kBAEerB,W","file":"content_area.js","sourcesContent":["import React from 'react';\nimport { MegadraftEditor as MegadraftEditorOrg } from 'megadraft';\nimport AreaActionsToolbar from './area_actions_toolbar';\n\n// quickfix for https://github.com/globocom/megadraft/issues/97\nclass MegadraftEditor extends MegadraftEditorOrg {\n  /* eslint class-methods-use-this: 0*/\n  setReadOnly() {\n    // do nothing\n  }\n}\n\nconst Styles = ({ highlightEditable, isEditing }) =>\n   ({\n     base: {\n       ...(highlightEditable ? {\n         outline: '1px dotted black',\n         padding: 15,\n         margin: -15,\n       } : {}),\n       ...(isEditing ? {\n         outline: '1px dotted black',\n         padding: 15,\n         margin: -15,\n       } : {}),\n       cursor: highlightEditable ? 'pointer' : null,\n       position: 'relative',\n     },\n   })\n;\n\nconst ContentArea = ({\n    className,\n    style,\n    canEdit,\n    isEditing,\n    blockPluginDialogIsActive,\n    highlightEditable,\n    startEditing,\n    cancelEditing,\n    entityInputs,\n    locale,\n    editorState,\n    setEditorState,\n    saveAndClose,\n    saveAndEdit,\n    megadraftActions,\n    blockRenderMap,\n    megadraftBlockPlugins = [],\n    copyLocales = [],\n    copyFromLocale,\n  }) => {\n  const styles = Styles({ highlightEditable, isEditing });\n\n  return (\n    <div style={style} className={className}>\n      <div\n        style={styles.base}\n        onClick={() => canEdit && highlightEditable && startEditing()}\n      >\n        {isEditing && (\n        <AreaActionsToolbar\n          saveAndClose={saveAndClose}\n          saveAndEdit={saveAndEdit}\n          cancelEditing={cancelEditing}\n          locale={locale}\n          copyLocales={copyLocales}\n          copyFromLocale={copyFromLocale}\n        />\n      )}\n        <MegadraftEditor\n          key={`contentId${isEditing ? '_editing' : ''}`} // force rerender\n          actions={megadraftActions}\n          plugins={megadraftBlockPlugins}\n          readOnly={blockPluginDialogIsActive || !canEdit || !isEditing}\n          editorState={editorState}\n          entityInputs={entityInputs}\n          blockRenderMap={blockRenderMap}\n          onChange={(state) => {\n            setEditorState(state);\n          }}\n        />\n        <div style={{ clear: 'both' }} />\n      </div>\n    </div>\n  );\n};\n\n\nContentArea.displayName = 'ContentArea';\n\nexport default ContentArea;\n"]}