{"version":3,"sources":["../../src/components/area_actions_toolbar.js"],"names":["AreaActionsToolbar","saveAndClose","saveAndEdit","cancelEditing","locale","copyLocales","copyFromLocale","display","flexDirection","width","padding","minHeight","borderTop","marginLeft","map","aLocale"],"mappings":";;;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,qBAAqB,yCACzB,oBADyB,EACH;AAAA,MACtBC,YADsB,QACtBA,YADsB;AAAA,MAEtBC,WAFsB,QAEtBA,WAFsB;AAAA,MAGtBC,aAHsB,QAGtBA,aAHsB;AAAA,MAItBC,MAJsB,QAItBA,MAJsB;AAAA,MAKtBC,WALsB,QAKtBA,WALsB;AAAA,MAMtBC,cANsB,QAMtBA,cANsB;AAAA,SAStB;AAAA;AAAA;AACE,aAAO;AACLC,iBAAS,MADJ;AAELC,uBAAe,KAFV;AAGLC,eAAO,MAHF;AAILC,iBAAS,CAJJ;AAKLC,mBAAW,EALN;AAMLC,mBAAW;AANN;AADT;AAUE;AAAA;AAAA;AACE;AAAA;AAAA,UAAiB,WAAjB,EAAuB,SAASX,YAAhC;AAAA;AAAA,OADF;AAEE;AAAA;AAAA,UAAiB,SAASC,WAA1B;AAAA;AAAA,OAFF;AAGE;AAAA;AAAA,UAAiB,SAASC,aAA1B;AAAA;AAAA;AAHF,KAVF;AAeE;AAAA;AAAA;AACE,eAAO;AACLU,sBAAY;AADP;AADT;AAKE;AAAA;AAAA;AAEIR,oBAAYS,GAAZ,CACE;AAAA,iBACEC,YAAYX,MAAZ,IACE;AAAA;AAAA;AACE,uBAAQ,SADV;AAEE,mBAAKW,OAFP;AAGE,uBAAS;AAAA,uBAAMT,eAAeS,OAAf,CAAN;AAAA;AAHX;AAKE,oEALF;AAME;AAAA;AAAA;AAAOA;AAAP;AANF,WAFJ;AAAA,SADF;AAFJ;AALF;AAfF,GATsB;AAAA,CADG,CAA3B;;kBAsDef,kB","file":"area_actions_toolbar.js","sourcesContent":["\nimport React from 'react';\n\nimport ButtonActionBar from './button_action_bar';\nimport ButtonGroup from './button_group';\nimport IconCopy from './icon_copy';\nimport fromContextOr from '../component_from_context_or';\n\nconst AreaActionsToolbar = fromContextOr(\n  'AreaActionsToolbar', ({\n  saveAndClose,\n  saveAndEdit,\n  cancelEditing,\n  locale,\n  copyLocales,\n  copyFromLocale,\n\n}) => (\n  <div\n    style={{\n      display: 'flex',\n      flexDirection: 'row',\n      width: '100%',\n      padding: 5,\n      minHeight: 50,\n      borderTop: '1px solid black',\n    }}\n  >\n    <ButtonGroup>\n      <ButtonActionBar black onClick={saveAndClose} >Save and close</ButtonActionBar>\n      <ButtonActionBar onClick={saveAndEdit} >Save</ButtonActionBar>\n      <ButtonActionBar onClick={cancelEditing} >cancel</ButtonActionBar>\n    </ButtonGroup>\n    <div\n      style={{\n        marginLeft: 'auto',\n      }}\n    >\n      <ButtonGroup>\n        {\n          copyLocales.map(\n            aLocale => (\n              aLocale !== locale && (\n                <ButtonActionBar\n                  variant=\"primary\"\n                  key={aLocale}\n                  onClick={() => copyFromLocale(aLocale)}\n                >\n                  <IconCopy />\n                  <span>{aLocale}</span>\n                </ButtonActionBar>\n              )\n            ),\n          )\n        }\n      </ButtonGroup>\n    </div>\n\n  </div>\n));\n\n\nexport default AreaActionsToolbar;\n"]}